
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "NAME FUNC TYPE STRUCT TYPE_DEFINE all : define \n                | define all \n        define : function\n                    | structexpr\n         structexpr : TYPE_DEFINE NAME STRUCT '{' s_member_list '}'  s_member_list : param s_member_list \n                        | param \n        function : FUNC NAME '(' paramlist ')' returnexpr  paramlist : param ',' paramlist  paramlist :  paramlist : param  param : NAME ':' TYPE returnexpr : TYPEreturnexpr : "
    
_lr_action_items = {'(':([7,],[10,]),':':([13,],[17,]),'FUNC':([0,2,5,6,18,23,24,25,],[3,-4,-3,3,-14,-8,-13,-5,]),'TYPE':([17,18,],[22,24,]),'TYPE_DEFINE':([0,2,5,6,18,23,24,25,],[4,-4,-3,4,-14,-8,-13,-5,]),',':([12,22,],[16,-12,]),'STRUCT':([8,],[11,]),'}':([19,20,22,26,],[25,-7,-12,-6,]),'{':([11,],[15,]),'NAME':([3,4,10,15,16,20,22,],[7,8,13,13,13,13,-12,]),')':([10,12,14,16,21,22,],[-10,-11,18,-10,-9,-12,]),'$end':([1,2,5,6,9,18,23,24,25,],[0,-4,-3,-1,-2,-14,-8,-13,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'all':([0,6,],[1,9,]),'s_member_list':([15,20,],[19,26,]),'returnexpr':([18,],[23,]),'function':([0,6,],[5,5,]),'define':([0,6,],[6,6,]),'structexpr':([0,6,],[2,2,]),'param':([10,15,16,20,],[12,20,12,20,]),'paramlist':([10,16,],[14,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> all","S'",1,None,None,None),
  ('all -> define','all',1,'p_all','FuncParse.py',72),
  ('all -> define all','all',2,'p_all','FuncParse.py',73),
  ('define -> function','define',1,'p_define','FuncParse.py',77),
  ('define -> structexpr','define',1,'p_define','FuncParse.py',78),
  ('structexpr -> TYPE_DEFINE NAME STRUCT { s_member_list }','structexpr',6,'p_struct','FuncParse.py',82),
  ('s_member_list -> param s_member_list','s_member_list',2,'p_s_member_list','FuncParse.py',86),
  ('s_member_list -> param','s_member_list',1,'p_s_member_list','FuncParse.py',87),
  ('function -> FUNC NAME ( paramlist ) returnexpr','function',6,'p_func_binop','FuncParse.py',91),
  ('paramlist -> param , paramlist','paramlist',3,'p_paramlist','FuncParse.py',95),
  ('paramlist -> <empty>','paramlist',0,'p_noparamlist','FuncParse.py',98),
  ('paramlist -> param','paramlist',1,'p_paramlist_last','FuncParse.py',101),
  ('param -> NAME : TYPE','param',3,'p_param','FuncParse.py',104),
  ('returnexpr -> TYPE','returnexpr',1,'p_returnexpr','FuncParse.py',108),
  ('returnexpr -> <empty>','returnexpr',0,'p_no_returnexpr','FuncParse.py',112),
]
