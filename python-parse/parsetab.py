
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "NAME FUNC TYPE STRUCT TYPE_DEFINEfunction : FUNC  NAME '(' paramlist ')' returnexpr function : FUNC  NAME '(' paramlist ')'function : FUNC  NAME '(' ')' ':' returnexpr function : FUNC  NAME '(' ')' paramlist : param ',' paramlist  paramlist : param  param : NAME ':' TYPE returnexpr : TYPE"
    
_lr_action_items = {')':([4,7,8,15,17,],[5,11,-6,-7,-5,]),'$end':([2,5,11,13,14,16,],[0,-4,-2,-3,-8,-1,]),'NAME':([1,4,12,],[3,6,6,]),'FUNC':([0,],[1,]),',':([8,15,],[12,-7,]),'TYPE':([9,10,11,],[14,15,14,]),':':([5,6,],[9,10,]),'(':([3,],[4,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,],[2,]),'returnexpr':([9,11,],[13,16,]),'param':([4,12,],[8,8,]),'paramlist':([4,12,],[7,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> function","S'",1,None,None,None),
  ('function -> FUNC NAME ( paramlist ) returnexpr','function',6,'p_func_binop','FuncParse.py',86),
  ('function -> FUNC NAME ( paramlist )','function',5,'p_func_noreturn_binop','FuncParse.py',90),
  ('function -> FUNC NAME ( ) : returnexpr','function',6,'p_func_noarg_binop','FuncParse.py',94),
  ('function -> FUNC NAME ( )','function',4,'p_func_noreturn_and_noarg_binop','FuncParse.py',98),
  ('paramlist -> param , paramlist','paramlist',3,'p_paramlist','FuncParse.py',102),
  ('paramlist -> param','paramlist',1,'p_paramlist_last','FuncParse.py',105),
  ('param -> NAME : TYPE','param',3,'p_param','FuncParse.py',108),
  ('returnexpr -> TYPE','returnexpr',1,'p_returnexpr','FuncParse.py',112),
]
